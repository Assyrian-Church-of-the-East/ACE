// <auto-generated />
using System;
using ACE.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ACE.Database.Migrations
{
    [DbContext(typeof(AceDbContext))]
    [Migration("20191210072011_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ACE.Model.Contribution", b =>
                {
                    b.Property<int>("ContributionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("ContributionTypeId");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<int?>("FamilyId");

                    b.Property<int?>("MemberId");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("ContributionId");

                    b.HasIndex("ContributionTypeId");

                    b.HasIndex("FamilyId");

                    b.HasIndex("MemberId");

                    b.ToTable("Contributions");
                });

            modelBuilder.Entity("ACE.Model.ContributionType", b =>
                {
                    b.Property<int>("ContributionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FromDate");

                    b.Property<bool>("IsMandatory");

                    b.Property<bool>("IsOnlyOnce");

                    b.Property<bool>("IsPrFamily");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ToDate");

                    b.Property<string>("TypeName");

                    b.HasKey("ContributionTypeId");

                    b.ToTable("ContributionTypes");
                });

            modelBuilder.Entity("ACE.Model.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("Name");

                    b.Property<string>("RegionName");

                    b.HasKey("DistrictId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("ACE.Model.Family", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Identity");

                    b.Property<int>("MainFamilyId");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("FamilyId");

                    b.HasIndex("MainFamilyId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("ACE.Model.MainFamily", b =>
                {
                    b.Property<int>("MainFamilyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FamilyClan");

                    b.Property<string>("FamilyName");

                    b.HasKey("MainFamilyId");

                    b.ToTable("MainFamily");
                });

            modelBuilder.Entity("ACE.Model.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActiveDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("BaptismalDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("Contry");

                    b.Property<int>("Cpr");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("DeathDate")
                        .HasColumnType("date");

                    b.Property<int?>("DistrictId");

                    b.Property<string>("Email");

                    b.Property<int?>("FamilyId");

                    b.Property<string>("FirstName");

                    b.Property<string>("FullName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsMainFamilyPerson");

                    b.Property<bool>("IsMale");

                    b.Property<bool>("IsMarried");

                    b.Property<bool>("IsUnderAge");

                    b.Property<string>("LastName");

                    b.Property<int>("MemberStatus");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("MovingDate")
                        .HasColumnType("date");

                    b.Property<string>("Profession");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("date");

                    b.Property<string>("RegistrationNumber");

                    b.Property<string>("TelephoneNumber1");

                    b.Property<string>("TelephoneNumber2");

                    b.Property<DateTime>("WeddingDate")
                        .HasColumnType("date");

                    b.HasKey("MemberId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("FamilyId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ACE.Model.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsObsolete");

                    b.Property<int?>("MemberId");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("NoteId");

                    b.HasIndex("MemberId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("ACE.Model.Contribution", b =>
                {
                    b.HasOne("ACE.Model.ContributionType", "ContributionType")
                        .WithMany()
                        .HasForeignKey("ContributionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ACE.Model.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId");

                    b.HasOne("ACE.Model.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ACE.Model.Family", b =>
                {
                    b.HasOne("ACE.Model.MainFamily", "MainFamily")
                        .WithMany("Families")
                        .HasForeignKey("MainFamilyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ACE.Model.Member", b =>
                {
                    b.HasOne("ACE.Model.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("ACE.Model.Family", "Family")
                        .WithMany("Members")
                        .HasForeignKey("FamilyId");
                });

            modelBuilder.Entity("ACE.Model.Note", b =>
                {
                    b.HasOne("ACE.Model.Member", "Member")
                        .WithMany("Notes")
                        .HasForeignKey("MemberId");
                });
#pragma warning restore 612, 618
        }
    }
}
